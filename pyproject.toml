[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "portfolio-manager"
dynamic = ["version"]
description = "A comprehensive Python package for portfolio management and analysis"
readme = "README.md"
license = { file = "LICENSE" }
authors = [
    { name = "Ali Kone", email = "ali.kone@example.com" },
]
maintainers = [
    { name = "Ali Kone", email = "ali.kone@example.com" },
]
keywords = [
    "portfolio",
    "finance",
    "investment",
    "risk-management",
    "optimization",
    "analytics",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Scientific/Engineering :: Mathematics",
]
requires-python = ">=3.9"
dependencies = [
    "numpy>=1.21.0",
    "pandas>=1.5.0",
    "scipy>=1.9.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "yfinance>=0.2.0",
    "requests>=2.28.0",
    "pydantic>=2.0.0",
    "plotly>=5.0.0",
    "jupyter>=1.1.1",
    "ipykernel>=6.30.1",
    "notebook>=7.4.5",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
    "tox>=4.0.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "sphinx-autodoc-typehints>=1.19.0",
    "nbsphinx>=0.8.0",
    "pandoc>=2.0.0",
    "jupyter>=1.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.8.0",
]

[project.urls]
Homepage = "https://github.com/alikone/portfolio-manager"
Documentation = "https://portfolio-manager.readthedocs.io"
Repository = "https://github.com/alikone/portfolio-manager"
Issues = "https://github.com/alikone/portfolio-manager/issues"
Changelog = "https://github.com/alikone/portfolio-manager/blob/main/CHANGELOG.md"

[tool.hatch.version]
path = "src/portfolio_manager/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/portfolio_manager"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=portfolio_manager",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80",
]

[tool.coverage.run]
source = ["src/portfolio_manager"]
omit = [
    "tests/*",
    "docs/*",
    "examples/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]
